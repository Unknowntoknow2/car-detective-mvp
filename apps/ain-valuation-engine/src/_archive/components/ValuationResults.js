import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export function ValuationResults({ valuation }) {
    const formatCurrency = (amount) => {
        return new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'USD',
            minimumFractionDigits: 0,
            maximumFractionDigits: 0,
        }).format(amount ?? 0);
    };
    const formatDate = (date) => {
        const d = typeof date === 'string' ? new Date(date) : date;
        return new Intl.DateTimeFormat('en-US', {
            year: 'numeric',
            month: 'short',
            day: 'numeric',
        }).format(d);
    };
    const getConfidenceColor = (confidence) => {
        if ((confidence ?? 0) >= 80)
            return 'text-green-600 bg-green-100';
        if ((confidence ?? 0) >= 60)
            return 'text-yellow-600 bg-yellow-100';
        return 'text-red-600 bg-red-100';
    };
    const getAdjustmentColor = (percentage) => {
        if ((percentage ?? 0) > 0)
            return 'text-green-600';
        if ((percentage ?? 0) < 0)
            return 'text-red-600';
        return 'text-gray-600';
    };
    return (_jsxs("div", { className: "max-w-4xl mx-auto p-6 space-y-6", children: [_jsxs("div", { className: "bg-white rounded-lg shadow-lg p-6", children: [_jsxs("div", { className: "text-center", children: [_jsx("h1", { className: "text-3xl font-bold text-gray-900 mb-2", children: "Vehicle Valuation Report" }), _jsxs("p", { className: "text-gray-600", children: [valuation.vehicleData?.year, " ", valuation.vehicleData?.make, " ", valuation.vehicleData?.model, valuation.vehicleData?.trim && ` ${valuation.vehicleData?.trim}`] }), _jsxs("p", { className: "text-sm text-gray-500", children: ["VIN: ", valuation.vehicleData?.vin] })] }), _jsx("div", { className: "mt-8 text-center", children: _jsxs("div", { className: "inline-block p-6 bg-blue-50 rounded-lg", children: [_jsx("h2", { className: "text-2xl font-semibold text-gray-700 mb-2", children: "Estimated Market Value" }), _jsx("div", { className: "text-5xl font-bold text-blue-600 mb-2", children: formatCurrency(valuation.estimated_value) }), _jsxs("div", { className: "text-lg text-gray-600", children: ["Range: ", formatCurrency(valuation.priceRange?.low), " - ", formatCurrency(valuation.priceRange?.high)] }), _jsxs("div", { className: `inline-block px-3 py-1 rounded-full text-sm font-medium mt-3 ${getConfidenceColor(valuation.confidence)}`, children: [valuation.confidence, "% Confidence"] })] }) }), _jsxs("div", { className: "mt-6 grid grid-cols-2 gap-4 text-sm", children: [_jsxs("div", { children: [_jsx("strong", { children: "Mileage:" }), " ", valuation.vehicleData?.mileage?.toLocaleString() || 'N/A'] }), _jsxs("div", { children: [_jsx("strong", { children: "Condition:" }), " ", String(valuation.vehicleData?.condition ?? 'N/A')] }), _jsxs("div", { children: [_jsx("strong", { children: "Title Status:" }), " ", String(valuation.vehicleData?.titleStatus ?? 'N/A')] }), _jsxs("div", { children: [_jsx("strong", { children: "Location:" }), " ", valuation.vehicleData?.zipCode || 'N/A'] })] })] }), _jsxs("div", { className: "bg-white rounded-lg shadow-lg p-6", children: [_jsxs("h3", { className: "text-xl font-semibold mb-4 flex items-center", children: [_jsx("span", { className: "mr-2", children: "\uD83E\uDD16" }), "AI Valuation Explanation"] }), _jsx("div", { className: "prose max-w-none", children: _jsx("p", { className: "text-gray-700 leading-relaxed", children: valuation.explanation }) })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs("div", { className: "bg-white rounded-lg shadow-lg p-6", children: [_jsx("h3", { className: "text-xl font-semibold mb-4", children: "Price Adjustments" }), Array.isArray(valuation.adjustments) && valuation.adjustments.length > 0 ? (_jsx("div", { className: "space-y-3", children: valuation.adjustments.map((adjustment, index) => (_jsxs("div", { className: "flex justify-between items-start p-3 bg-gray-50 rounded-md", children: [_jsxs("div", { className: "flex-1", children: [_jsx("div", { className: "font-medium", children: String(adjustment.factor ?? '') }), _jsx("div", { className: "text-sm text-gray-600", children: String(adjustment.explanation ?? '') })] }), _jsxs("div", { className: `font-semibold ${getAdjustmentColor(adjustment.percentage)}`, children: [adjustment.percentage > 0 ? '+' : '', (adjustment.percentage ?? 0).toFixed(1), "%"] })] }, index))) })) : (_jsx("p", { className: "text-gray-500", children: "No significant adjustments applied" }))] }), _jsxs("div", { className: "bg-white rounded-lg shadow-lg p-6", children: [_jsx("h3", { className: "text-xl font-semibold mb-4", children: "Market Factors" }), Array.isArray(valuation.marketFactors) && valuation.marketFactors.length > 0 ? (_jsx("div", { className: "space-y-3", children: valuation.marketFactors.map((factor, index) => (_jsxs("div", { className: "flex justify-between items-start p-3 bg-gray-50 rounded-md", children: [_jsxs("div", { className: "flex-1", children: [_jsx("div", { className: "font-medium", children: factor.factor }), _jsx("div", { className: "text-sm text-gray-600", children: factor.description })] }), _jsxs("div", { className: `font-semibold ${getAdjustmentColor((factor.impact ?? 0) * 100)}`, children: [factor.impact > 0 ? '+' : '', (((factor.impact ?? 0) * 100)).toFixed(1), "%"] })] }, index))) })) : (_jsx("p", { className: "text-gray-500", children: "No specific market factors identified" }))] })] }), _jsxs("div", { className: "bg-white rounded-lg shadow-lg p-6", children: [_jsx("h3", { className: "text-xl font-semibold mb-4", children: "Valuation Accuracy" }), _jsxs("div", { className: "grid grid-cols-2 lg:grid-cols-4 gap-4", children: [_jsxs("div", { className: "text-center p-4 bg-blue-50 rounded-lg", children: [_jsx("div", { className: "text-2xl font-bold text-blue-600", children: valuation.accuracy?.comparableCount ?? 'N/A' }), _jsx("div", { className: "text-sm text-gray-600", children: "Comparable Vehicles" })] }), _jsxs("div", { className: "text-center p-4 bg-green-50 rounded-lg", children: [_jsxs("div", { className: "text-2xl font-bold text-green-600", children: [valuation.accuracy?.dataQuality ?? 'N/A', "%"] }), _jsx("div", { className: "text-sm text-gray-600", children: "Data Quality" })] }), _jsxs("div", { className: "text-center p-4 bg-purple-50 rounded-lg", children: [_jsxs("div", { className: "text-2xl font-bold text-purple-600", children: [valuation.accuracy?.marketCoverage ?? 'N/A', "%"] }), _jsx("div", { className: "text-sm text-gray-600", children: "Market Coverage" })] }), _jsxs("div", { className: "text-center p-4 bg-yellow-50 rounded-lg", children: [_jsxs("div", { className: "text-2xl font-bold text-yellow-600", children: ["\u00B1", valuation.accuracy?.confidenceInterval ?? 'N/A', "%"] }), _jsx("div", { className: "text-sm text-gray-600", children: "Confidence Interval" })] })] })] }), _jsxs("div", { className: "bg-white rounded-lg shadow-lg p-6", children: [_jsx("h3", { className: "text-xl font-semibold mb-4", children: "Recent Comparable Sales" }), _jsxs("div", { className: "overflow-x-auto", children: [_jsxs("table", { className: "w-full text-sm", children: [_jsx("thead", { children: _jsxs("tr", { className: "border-b", children: [_jsx("th", { className: "text-left p-2", children: "Vehicle" }), _jsx("th", { className: "text-left p-2", children: "Year" }), _jsx("th", { className: "text-left p-2", children: "Mileage" }), _jsx("th", { className: "text-left p-2", children: "Condition" }), _jsx("th", { className: "text-left p-2", children: "Price" }), _jsx("th", { className: "text-left p-2", children: "Listed" }), _jsx("th", { className: "text-left p-2", children: "Source" })] }) }), _jsx("tbody", { children: (valuation.comparables ?? []).slice(0, 10).map((comp, index) => (_jsxs("tr", { className: "border-b hover:bg-gray-50", children: [_jsxs("td", { className: "p-2", children: [_jsxs("div", { className: "font-medium", children: [comp.make, " ", comp.model] }), comp.trim && _jsx("div", { className: "text-gray-500 text-xs", children: comp.trim })] }), _jsx("td", { className: "p-2", children: comp.year }), _jsx("td", { className: "p-2", children: comp.mileage.toLocaleString() }), _jsx("td", { className: "p-2 capitalize", children: String(comp.condition).replace('_', ' ') }), _jsx("td", { className: "p-2 font-semibold", children: formatCurrency(comp.price) }), _jsx("td", { className: "p-2", children: formatDate(comp.listingDate) }), _jsx("td", { className: "p-2", children: _jsx("span", { className: "inline-block px-2 py-1 bg-gray-200 rounded text-xs", children: comp.source }) })] }, index))) })] }), (valuation.comparables?.length ?? 0) > 10 && (_jsxs("div", { className: "mt-4 text-center text-gray-500 text-sm", children: ["Showing 10 of ", valuation.comparables?.length ?? 0, " comparable vehicles"] }))] })] }), _jsxs("div", { className: "bg-gray-50 rounded-lg p-6 text-center text-sm text-gray-600", children: [_jsxs("p", { children: ["Report generated on ", formatDate(valuation.timestamp), " by the AIN Valuation Engine"] }), _jsx("p", { className: "mt-2", children: "This valuation is based on current market data and should be used for informational purposes only. Actual selling prices may vary based on local market conditions and vehicle-specific factors." })] })] }));
}
